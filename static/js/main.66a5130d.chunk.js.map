{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","query","onQuery","onSelectOption","onClear","onChange","event","target","value","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","queryOption","setQueryOption","isSelectTodos","setIsSelectTodos","setQuery","result","length","queryTodo","optionQuery","filter","toLowerCase","includes","filterTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66a5130d.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Prop = {\n  todos: Todo[],\n  onSelect: (value: Todo) => void;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Prop> = (\n  {\n    todos,\n    onSelect,\n    selectedTodo,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={selectedTodo === todo\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","type Prop = {\n  query: string;\n  onQuery: (query: string) => void;\n  onSelectOption: (option: string) => void;\n  onClear: () => void;\n};\n\nexport const TodoFilter: React.FC<Prop> = (\n  {\n    query,\n    onQuery,\n    onSelectOption,\n    onClear,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={event => onSelectOption(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => onQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={onClear}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Prop = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Prop> = (\n  {\n    todo,\n    onClose,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then((res) => {\n      setUser(res);\n    });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              { todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [queryOption, setQueryOption] = useState('');\n  const [isSelectTodos, setIsSelectTodos] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos().then((result) => {\n      setTodos(result);\n    });\n  }, []);\n\n  const filterTodo = (queryTodo: string, optionQuery: string) => {\n    switch (optionQuery) {\n      case 'active':\n        return todos.filter(todo => !todo.completed\n          && todo.title.toLowerCase().includes(queryTodo.toLowerCase()));\n\n      case 'completed':\n        return todos.filter(todo => todo.completed\n          && todo.title.toLowerCase().includes(queryTodo.toLowerCase()));\n\n      default:\n        return todos;\n    }\n  };\n\n  const changeQuery = (value: string) => {\n    setQuery(value);\n  };\n\n  const changeOption = (value: string) => {\n    setQueryOption(value);\n  };\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  const cahngedSelectTodo = (value: Todo) => {\n    setIsSelectTodos(value);\n  };\n\n  const closeModalTodo = () => {\n    setIsSelectTodos(null);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQuery={changeQuery}\n                onSelectOption={changeOption}\n                onClear={clearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filterTodo(query, queryOption)}\n                    onSelect={cahngedSelectTodo}\n                    selectedTodo={isSelectTodos}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isSelectTodos && (\n        <TodoModal\n          todo={isSelectTodos}\n          onClose={closeModalTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}